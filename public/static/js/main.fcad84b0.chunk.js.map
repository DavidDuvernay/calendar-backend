{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","start","moment","toDate","end","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","startLogout","dispatch","clear","logout","login","user","checkingFinish","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","placeholder","onChange","Navbar","useSelector","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusOneHour","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","msg","dire","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","components","view","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fcad84b0.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventLogout: '[event] Clean event',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.authLogin:\r\n\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n\r\n        case types.authStartRegister:\r\n            \r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            \r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import moment from 'moment';\r\n\r\nimport {types} from '../types/types'\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        \r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {types} from '../types/types';\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        \r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport { authReducer } from './authReducer';\r\n\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import {createStore, compose, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchWithoutToken = (endpoint, data, method ='GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    \r\n\r\n    if(method === 'GET'){\r\n        \r\n        return fetch(url)\r\n    } else {\r\n        \r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }) \r\n    }\r\n};\r\n\r\nexport const fetchWithToken = (endpoint, data, method ='GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token')    \r\n\r\n    if(method === 'GET'){\r\n        \r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        })\r\n    } else {\r\n        \r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        }) \r\n    }\r\n};","import moment from \"moment\";\r\n\r\n\r\nexport const prepareEvents = ( events = []) => {\r\n\r\n        return events.map(\r\n            (e) => ({\r\n                ...e,\r\n                start: moment(e.start).toDate(),\r\n                end: moment(e.end).toDate()\r\n            })\r\n        )\r\n};","import Swal from 'sweetalert2';\r\n\r\nimport { fetchWithToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport {types} from '../types/types';\r\n\r\nexport const eventStartAddNew = (event) => {\r\n\r\n    return async(dispatch, getState) => {\r\n        \r\n        const {uid, name} = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchWithToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n            \r\n            if(body.ok){\r\n                event.id= body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                \r\n                dispatch(eventAddNew(event))\r\n            }\r\n        } catch (err) {\r\n            \r\n            \r\n            console.log(err)\r\n        }\r\n    }\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n            console.log(body.msg)\r\n            if(body.ok){\r\n\r\n                dispatch(eventUpdated(event))\r\n            } else {\r\n                Swal.dire('Error', 'You are not authorized to do this action', 'error')\r\n            }\r\n\r\n        } catch (err) {\r\n            \r\n            console.log(err)\r\n        }\r\n    }\r\n};\r\n\r\nconst eventUpdated = (event) => ({\r\n    \r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n\r\n    return async(dispatch, getState) => {\r\n        \r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n            \r\n            const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n\r\n                dispatch(eventDeleted())\r\n            } else {\r\n                Swal.dire('Error', 'You are not authorized to do this action', 'error')\r\n            }\r\n\r\n        } catch (err) {\r\n            \r\n            console.log(err)\r\n        }\r\n    }\r\n};\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted});\r\n\r\nexport const eventStartLoading = () => {\r\n\r\n    return async(dispatch) => {\r\n        \r\n        try {\r\n            \r\n            const resp = await fetchWithToken('events');\r\n            const body = await resp.json();\r\n            const events = prepareEvents(body.event);\r\n            // console.log(events)\r\n            dispatch(eventLoaded(events))\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({type: types.eventLogout});","import Swal from \"sweetalert2\";\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n\r\n    return async(dispatch) => {\r\n        \r\n        const resp = await fetchWithoutToken('auth', { email, password}, 'POST');\r\n        const body = await resp.json()\r\n        \r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n\r\n            Swal.fire('Error', 'Wrong email or password', 'error')\r\n        }\r\n    }\r\n};\r\n\r\nexport const startRegister = (email, password, name) => {\r\n\r\n    return async(dispatch)=> {\r\n        \r\n        const resp = await fetchWithoutToken('auth/new', {email, password, name}, 'POST');\r\n        const body = await resp.json()\r\n\r\n        if(body.ok){\r\n\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n\r\n        } else {\r\n            \r\n            return Swal.fire('Error', 'Failed to create user', 'error')\r\n        }\r\n    }\r\n};\r\n\r\nexport const startChecking = () => {\r\n\r\n    return async(dispatch) => {\r\n        const resp = await fetchWithToken('auth/renew');\r\n        const body = await resp.json()\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n\r\n        } else {\r\n            dispatch(checkingFinish)\r\n        }\r\n    }  \r\n};\r\n\r\nexport const startLogout = () => {\r\n        \r\n    return (dispatch) => {\r\n\r\n        localStorage.clear()\r\n        dispatch(eventLogout())\r\n        dispatch(logout())\r\n    }\r\n}\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nconst checkingFinish = () => ({type: types.authCheckingFinish});\r\n\r\nconst logout = () => ({type: types.authLogout})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'david@gmail.com',\r\n        lPassword: '123123'\r\n    });\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Rose',\r\n        rEmail: 'rose@gmail.com',\r\n        rPassword1: '123123',\r\n        rPassword2: '123123'\r\n    });\r\n\r\n    const {lEmail, lPassword} = formLoginValues;\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(startLogin( lEmail, lPassword))\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if(rPassword1 !== rPassword2){\r\n\r\n            return Swal.fire('Error', 'Not matching passwords', 'error')\r\n        }\r\n\r\n        dispatch(startRegister(rEmail, rPassword1, rName))\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Login</h3>\r\n                    <form onSubmit= { handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name= \"lEmail\"\r\n                                value= { lEmail }\r\n                                onChange= { handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name= \"lPassword\"\r\n                                value= { lPassword }\r\n                                onChange= { handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Register</h3>\r\n                    <form onSubmit= {handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Name\"\r\n                                name= 'rName'\r\n                                value= {rName}\r\n                                onChange= {handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name= 'rEmail'\r\n                                value= {rEmail}\r\n                                onChange= {handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Pasword\" \r\n                                name= 'rPassword1'\r\n                                value= {rPassword1}\r\n                                onChange= {handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Confirm password\"\r\n                                name= 'rPassword2' \r\n                                value= {rPassword2}\r\n                                onChange= {handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Create account\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        \r\n        dispatch(startLogout())        \r\n    }\r\n    return(\r\n        <div className= 'navbar navbar-dark bg-dark mb-4'>\r\n            <span className= 'navbar-brand'>\r\n                {name}\r\n            </span>\r\n        \r\n        <button className= 'btn btn-outline-danger' onClick= {handleLogout}>\r\n            <i className= 'fas fa-sign-out-alt'></i>\r\n            <span> Exit</span>\r\n        </button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n            <span>{title} </span>\r\n            <strong>- {user.name}</strong>\r\n        </div>\r\n    )\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n    \r\n});\r\n\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n    \r\n});","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport moment from \"moment\";\r\nimport Swal from 'sweetalert2';\r\n\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlusOneHour = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlusOneHour.toDate()\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {modalOpen} = useSelector( state => state.ui );\r\n    const {activeEvent} = useSelector( state => state.calendar )\r\n\r\n    const [dateStart, setDateStart] = useState( now.toDate() );\r\n    const [dateEnd, setDateEnd] = useState( nowPlusOneHour.toDate() );\r\n    const [titleValid, setTitleValid] = useState(true);\r\n    const [formValues, setFormValues] = useState( initEvent );\r\n\r\n    const {notes, title, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        if( activeEvent ){\r\n            setFormValues(activeEvent)\r\n        } else {\r\n            setFormValues(initEvent)\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal())\r\n        dispatch(eventClearActiveEvent())\r\n        setFormValues(initEvent)\r\n    };\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    };\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault()\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            \r\n            return Swal.fire('Error', 'Dates have to be different', 'error')\r\n        }\r\n\r\n        if(title.trim().length < 1) {\r\n            return setTitleValid(false)\r\n        }\r\n\r\n        if(activeEvent){ \r\n            dispatch(eventStartUpdate( formValues ))\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues))\r\n        }\r\n\r\n\r\n        setTitleValid(true)\r\n        closeModal()\r\n    }\r\n\r\n    return(\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            className= 'modal'\r\n            overlayClassName= 'modal-fondo'\r\n            closeTimeoutMS= {200}\r\n        >\r\n            <h1> { (activeEvent)? 'Edit event': 'New event'} </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit= {handleSubmitForm}    \r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Start date</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className= 'form-control'\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>End date</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate= { dateStart }\r\n                        className= 'form-control'\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Title and Notes</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Event name\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value= {title}\r\n                        onChange= {handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Some description</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notes\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value= {notes}\r\n                        onChange= {handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Aditional information</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Save</span>\r\n                </button>\r\n\r\n                </form>\r\n        </Modal>\r\n    )\r\n};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n    \r\n    return (\r\n        <button\r\n            className= 'btn btn-primary fab'\r\n            onClick= {handleClick}\r\n        >\r\n            <i className= 'fas fa-plus'></i>\r\n        </button>\r\n    )\r\n};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete())\r\n    };\r\n\r\n    return (\r\n        <button\r\n            className= 'btn btn-danger fab-danger'\r\n            onClick= {handleDelete}\r\n        >\r\n            <i className= 'fas fa-trash'></i>\r\n        </button>\r\n    )\r\n};","import React, { useEffect, useState } from 'react';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {events, activeEvent} = useSelector( state => state.calendar );\r\n    const {uid} = useSelector( state => state.auth );\r\n    \r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(eventStartLoading())\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal())\r\n    };\r\n    \r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e))\r\n        \r\n    };\r\n    \r\n    const onViewChange = (e) => {\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e)\r\n    };\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected ) => {\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660' ,\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        };\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent())\r\n    }\r\n\r\n    return (\r\n        <div className= 'calendar-screen'>\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                style={{ height: 500 }}\r\n                eventPropGetter= {eventStyleGetter}\r\n                onDoubleClickEvent= {onDoubleClick}\r\n                onSelectEvent= {onSelectEvent}\r\n                onView= {onViewChange}\r\n                onSelectSlot= {onSelectSlot}\r\n                selectable= {true} \r\n                components = {{ event: CalendarEvent}}\r\n                view= {lastView}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            {\r\n                (activeEvent) && <DeleteEventFab /> \r\n            }\r\n            \r\n            <CalendarModal />\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n\r\n    return (\r\n        <Route {...rest}\r\n\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ?( <Component {...props} />)\r\n                    :( <Redirect to='/login'/>)\r\n            )}\r\n        />\r\n    )\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ?( <Redirect to='/'/>)\r\n                    :( <Component {...props} />)\r\n            )}\r\n        />\r\n    )\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n  \r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {uid} = useSelector(state => state.auth)\r\n    \r\n    useEffect(() => {\r\n        \r\n        dispatch(startChecking())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute exact path= \"/login\" component= {LoginScreen} isAuthenticated= {!! uid}/>\r\n\r\n                    <PrivateRoute exact path= \"/\" component= {CalendarScreen} isAuthenticated= {!! uid}/>\r\n\r\n                    <Redirect to= '/' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\r\nimport {Provider} from 'react-redux'\r\n\r\nimport { store } from './store/store';\r\n\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n\r\n    return (\r\n        <Provider store= { store }>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CalendarApp } from './CalendarApp';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n  <CalendarApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}